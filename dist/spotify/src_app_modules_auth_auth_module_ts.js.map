{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/pages/auth-page/auth-page.component.ts","./src/app/modules/auth/pages/auth-page/auth-page.component.html","./src/app/modules/auth/services/auth.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthPageComponent } from './pages/auth-page/auth-page.component';\n\nconst routes: Routes = [\n  {\n    path:'login', // http://localhost:4200/auth/login\n    component: AuthPageComponent\n  },\n  {\n    path:'**',\n    redirectTo: '/auth/login'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthPageComponent } from './pages/auth-page/auth-page.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AuthPageComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@modules/auth/services/auth.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.css']\n})\nexport class AuthPageComponent implements OnInit {\n\n  formLogin: FormGroup = new FormGroup({})\n  errorSession: boolean = false\n\n  constructor(private authService: AuthService, private cookie: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.formLogin = new FormGroup(\n      {\n        email: new FormControl('', [\n          Validators.required,\n          Validators.email\n        ]),\n        password: new FormControl('', [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(12)\n        ])\n      }\n    )\n  }\n\n  sendLogin(): void {\n    const { email, password } = this.formLogin.value\n    this.authService.sendCredentials(email, password)\n      .subscribe(\n        {\n          next: responseOk => { // 200 < 400 --> Cuando las credenciales son correctas\n            console.log('Session iniciada correcta', responseOk);\n            const { tokenSession, data } = responseOk\n            this.cookie.set('token', tokenSession, 4, '/')\n            this.router.navigate(['/', 'tracks'])\n          },\n          error: err => {  // error 400>= --> Las credenciales no son correctas\n            this.errorSession = true\n            console.log('⚠⚠⚠⚠Ocurrio error con tu email o password');\n          }\n        }\n      );\n  }\n\n}\n","<div class=\"login-auth-page\">\n    <div class=\"login-auth-wrapper\">\n        <h3>Para continuar, inicia sesión en Spotify.</h3>\n        <div class=\"login-social-zone\">\n            <button class=\"social-btn btn-fb \"> <i class=\"uil uil-facebook-f\"></i> Continuar con Social</button>\n            <button class=\"social-btn btn-apple\"><i class=\"uil uil-apple\"></i> Continuar con Apple</button>\n            <button class=\"social-btn\"><i class=\"uil uil-google\"></i> Continuar con Google</button>\n        </div>\n        <div class=\"separator\"></div>\n        <form (ngSubmit)=\"sendLogin()\" [formGroup]=\"formLogin\" class=\"login-auth-form\">\n            <div class=\"form-group\">\n                <label for=\"email\">Dirección de correo o nombre de usuario</label>\n                <input formControlName=\"email\" type=\"text\" placeholder=\"Dirección de correo o nombre de usuario\"\n                    class=\"form-input\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Contraseña</label>\n                <input formControlName=\"password\" type=\"password\" placeholder=\"Contraseña\" class=\"form-input\">\n            </div>\n            <div class=\"form-steps\">\n                <a class=\"link\" href=\"\">¿Se te ha olvidado la contraseña?</a>\n            </div>\n            <div *ngIf=\"errorSession\">\n                Ocurrio un error con tu email o password\n            </div>\n            <div class=\"form-action\">\n                <button [disabled]=\"formLogin.invalid\" class=\"login social-btn\">Iniciar sesión</button>\n            </div>\n        </form>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private readonly URL = environment.api\n\n  constructor(private httpClient: HttpClient) { }\n\n  sendCredentials(email: string, password: string): Observable<any> {\n    const body = {\n      email,\n      password\n    }\n    return this.httpClient.post(`${this.URL}/auth/login`, body)\n  }\n\n  suma(a: number, b: number): number {\n    return a + b\n  }\n}\n"],"names":["RouterModule","AuthPageComponent","routes","path","component","redirectTo","AuthRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","AuthModule","declarations","FormControl","FormGroup","Validators","i0","constructor","authService","cookie","router","ngOnInit","formLogin","email","required","password","minLength","maxLength","sendLogin","value","sendCredentials","subscribe","next","responseOk","console","log","tokenSession","data","set","navigate","error","err","errorSession","selectors","decls","vars","consts","template","ctx","environment","AuthService","httpClient","api","body","post","URL","suma","a","b","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}