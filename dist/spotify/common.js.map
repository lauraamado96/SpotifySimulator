{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;AAGuC;AAC8B;;;AAK/D,MAAOE,aAAa;EAIxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFb,QAAG,GAAGH,sEAAe;EAEQ;EAE9CK,aAAa,CAACC,IAAY;IACxB,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,GAAG,eAAeF,IAAI,EAAE,CAAC,CACzDG,IAAI,CACHV,yCAAG,CAAEW,OAAY,IAAKA,OAAO,CAACC,IAAI,CAAC,CACpC;EACL;;AAXWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAFZ;AAAM","sources":["./src/app/modules/history/services/search.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  private readonly URL = environment.api\n\n  constructor(private httpClient: HttpClient) { }\n\n  searchTracks$(term: string): Observable<any> {\n    return this.httpClient.get(`${this.URL}/tracks?src=${term}`)\n      .pipe(\n        map((dataRaw: any) => dataRaw.data)\n      )\n  }\n\n}\n"],"names":["map","environment","SearchService","constructor","httpClient","api","searchTracks$","term","get","URL","pipe","dataRaw","data","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}